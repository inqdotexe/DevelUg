	// Перед заполением графика очищаем таблицу
	Объект.ГрафикПлатежей.Очистить();
	// первый платеж
	// Вычисляем закрытую первым платежом площадь
	ЗакрытаяПлощадь = ?(СтоимостьКвМ = 0, 0, ПервыйПлатежСумма / СтоимостьКвМ);
	
	// Добавляем и заполняем первую строку графика
	СтрокаГрафика = Объект.ГрафикПлатежей.Добавить();
	
	СтрокаГрафика.СрокОплаты = ПервыйПлатежДата;
	СтрокаГрафика.Количество = ЗакрытаяПлощадь;
	СтрокаГрафика.ЦенаКвМ	 = СтоимостьКвМ;
	СтрокаГрафика.Сумма		 = ПервыйПлатежСумма;
	
	СтрокаГрафика.ФиксированнаяСумма = Истина; // спец флаг, который используется в интерактивном редактировании графика
	
	// Проверим ограничения рассрочки, если необходимо скорректируем дату последнего платежа, уведомим пользователя
	// Расчитаем разницу в месяцах между первым и последним платежом
	#Область Ограничение
	Годы = Год(ПоследнийПлатежДата) - Год(ПервыйПлатежДата);
	Месяцы = Месяц(ПоследнийПлатежДата) - Месяц(ПервыйПлатежДата) + Годы * 12;
	Если (ЗначениеЗаполнено(МаксРассрочкаДо) И ПоследнийПлатежДата > МаксРассрочкаДо) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Максимальный срок рассрочки до " + Формат(МаксРассрочкаДо, "ДЛФ=DD") + ".";
		Сообщение.Поле = "ПоследнийПлатежДата";
		Сообщение.Сообщить();
		
	ИначеЕсли (ЗначениеЗаполнено(МаксРассрочкаМес) И Месяцы + 1 > МаксРассрочкаМес) Тогда // добавим месяц, т.к. рассрочка рассчитывается от даты подписания, отсюда дата первого платежа = 1 мес. рассрочки
		
		ПревышениеРассрочки = Месяцы + 1 - МаксРассрочкаМес;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Максимальный срок рассрочки превышен на " + ПревышениеРассрочки + " мес.";
		Сообщение.Поле = "ПоследнийПлатежДата";
		Сообщение.Сообщить();
		
	КонецЕсли;
	#КонецОбласти
	
	// расчет количества строк
	ДопСтрок = 0;
	Если Месяцы < 1 Тогда
		// варианты:
		// а. сравнить даты первого и последнего платежа, если равны 1 строка, иначе 2
		// б. сравнить сумму первого платежа со стоимостью, если равны 1 строка (100% оплата), иначе 2
		
		// а (можно вынести данную проверку до всех расчетов)
		Если Не ПоследнийПлатежДата = ПервыйПлатежДата Тогда
			ДопСтрок = 1;
		КонецЕсли;
		// б
		Если ПервыйПлатежСумма < Стоимость Тогда
			ДопСтрок = 1;
		КонецЕсли;
	КонецЕсли;
	
	// первый платеж, рассрочка, доп.
	СтрокВГрафике = 1 + Месяцы + ДопСтрок;
	
	// Определим количество строк в графике на которые будем распределять остаток площадт
	СтрокДляРаспределения = СтрокВГрафике - 1;
	// Расчитаем метраж для распределяемых строк
	СтрокаГрафикаКоличество = ?(СтрокДляРаспределения = 0, 0, (Площадь - ЗакрытаяПлощадь) / СтрокДляРаспределения);
	// Организуем цикл по количеству создаваемых строк
	Для НомерСтроки = 2 По СтрокВГрафике Цикл
		
		СтрокаГрафика = Объект.ГрафикПлатежей.Добавить();
		
		// срок расчитываем от даты первого платежа
		СтрокаГрафика.СрокОплаты = ДобавитьМесяц(ПервыйПлатежДата, НомерСтроки - 1);
		// если дата последнего платежа в одном месяце с расчетным сроком оплаты, подставим ее
		Годы = Год(ПоследнийПлатежДата) - Год(СтрокаГрафика.СрокОплаты);
		Месяцы = Месяц(ПоследнийПлатежДата) - Месяц(СтрокаГрафика.СрокОплаты) + Годы * 12;
		Если Месяцы = 0 Тогда
			СтрокаГрафика.СрокОплаты = ПоследнийПлатежДата;
		КонецЕсли;
		
		// удорожание
		Если ЗначениеЗаполнено(УдорожаниеМес) Тогда
		
			Если СтрокаГрафика.НомерСтроки >= УдорожаниеМес Тогда
				ПредСтоимостьКвМ = Объект.ГрафикПлатежей[НомерСтроки - 2].ЦенаКвМ;
				СтрокаГрафика.ЦенаКвМ = ПредСтоимостьКвМ + (ПредСтоимостьКвМ * УдорожаниеПроцент) / 100;
			Иначе
				СтрокаГрафика.ЦенаКвМ = СтоимостьКвМ;
			КонецЕсли;
			
		Иначе
			СтрокаГрафика.ЦенаКвМ = СтоимостьКвМ;
		КонецЕсли;
		
		СтрокаГрафика.Количество = СтрокаГрафикаКоличество;
		СтрокаГрафика.Сумма		 = СтрокаГрафика.Количество * СтрокаГрафика.ЦенаКвМ;
		
	КонецЦикла;

	// разницу добавим в последнюю сроку (округление итогов, расчет по сумме)
	РазницаПлощади = Объект.ГрафикПлатежей.Итог("Количество") - Площадь;
	Если РазницаПлощади Тогда
		СтрокаГрафика.Количество = СтрокаГрафика.Количество - РазницаПлощади;
		СтрокаГрафика.Сумма = СтрокаГрафика.ЦенаКвМ * СтрокаГрафика.Количество;
		
		СтрокаГрафика.ФиксированнаяСумма = Ложь; // последнюю строку не фиксируем для модификаций
	КонецЕсли;
